// @ts-check

/* eslint-disable  @typescript-eslint/no-var-requires */

const { defineConfig } = require('eslint-define-config');

const { error } = require('./types');

const configuration = defineConfig({
  rules: {
    // Possible Problems
    // These rules relate to possible logic errors in code:

    'array-callback-return': [
      YESerror,
      {
        allowImplicit: true,
        checkForEach: true,
      },
    ],
    'no-await-in-loop': error,
    // 'no-constant-binary-expression': off,
    // 'no-constructor-return': YESoff,
    // 'no-duplicate-imports': off,
    // 'no-empty-pattern': YESerror,
    // 'no-fallthrough': YESerror,
    // 'no-new-native-nonconstructor': off,
    // 'no-promise-executor-return': off,
    // 'no-self-assign': YESoff,
    // 'no-self-compare': YESoff,
    // 'no-template-curly-in-string': off,
    // 'no-unmodified-loop-condition': YESoff,
    // 'no-unreachable-loop': off,
    // 'no-unused-private-class-members': off,
    // 'no-use-before-define': off,
    // 'require-atomic-updates': off,

    // Suggestions
    // These rules suggest alternate ways of doing things:

    // 'accessor-pairs': YESoff,
    // 'arrow-body-style': off,
    // 'block-scoped-var': YESoff,
    // 'camelcase': off,
    // 'capitalized-comments': off,
    // 'class-methods-use-this': YESoff,
    // 'complexity': YESoff,
    // 'consistent-return': YESoff,
    // 'consistent-this': off,
    // 'curly': YESoff,
    // 'default-case': YESoff,
    // 'default-case-last': YESoff,
    // 'default-param-last': YESoff,
    // 'dot-notation': YESoff,
    // 'eqeqeq': YESoff,
    // 'func-name-matching': off,
    // 'func-names': off,
    // 'func-style': off,
    // 'grouped-accessor-pairs': YESoff,
    // 'guard-for-in': YESoff,
    // 'id-denylist': off,
    // 'id-length': off,
    // 'id-match': off,
    // 'init-declarations': off,
    // 'logical-assignment-operators': off,
    // 'max-classes-per-file': YESoff,
    // 'max-depth': off,
    // 'max-lines': off,
    // 'max-lines-per-function': off,
    // 'max-nested-callbacks': off,
    // 'max-params': off,
    // 'max-statements': off,
    // 'multiline-comment-style': off,
    // 'new-cap': off,
    // 'no-alert': YESoff,
    // 'no-array-constructor': off,
    // 'no-bitwise': off,
    // 'no-caller': YESoff,
    // "no-case-declarations": YESerror,
    // 'no-confusing-arrow': off,
    // 'no-console': off,
    // 'no-continue': off,
    // 'no-delete-var': error,
    // 'no-div-regex': YESoff,
    // 'no-else-return': YESoff,
    'no-empty': [
      error,
      {
        allowEmptyCatch: true,
      },
    ],
    // 'no-empty-function': YESoff,
    // 'no-empty-static-block': YESoff,
    // 'no-eq-null': YESoff,
    'no-eval': YESerror,
    // 'no-extend-native': YESoff,
    // 'no-extra-bind': YESoff,
    'no-extra-boolean-cast': [
      error,
      {
        enforceForLogicalOperands: true,
      },
    ],
    // 'no-extra-label': YESoff,
    // 'no-extra-semi': error,
    // 'no-floating-decimal': YESoff,
    // 'no-global-assign': YESerror,
    // 'no-implicit-coercion': YESoff,
    // 'no-implicit-globals': YESoff,
    // 'no-implied-eval': YESoff,
    // 'no-inline-comments': off,
    // 'no-invalid-this': YESoff,
    // 'no-iterator': YESoff,
    // 'no-label-var': off,
    // 'no-labels': YESoff,
    // 'no-lone-blocks': YESoff,
    // 'no-lonely-if': off,
    // 'no-loop-func': YESoff,
    // 'no-magic-numbers': YESoff,
    // 'no-mixed-operators': off,
    // 'no-multi-assign': off,
    // 'no-multi-str': YESoff,
    // 'no-negated-condition': off,
    // 'no-nested-ternary': off,
    // 'no-new': YESoff,
    // 'no-new-func': YESoff,
    // 'no-new-object': off,
    // 'no-new-wrappers': YESoff,
    // 'no-nonoctal-decimal-escape': YESerror,
    // 'no-octal': YESerror,
    // 'no-octal-escape': YESoff,
    // 'no-param-reassign': YESoff,
    // 'no-plusplus': off,
    // 'no-proto': YESoff,
    // 'no-redeclare': YESerror,
    // 'no-regex-spaces': error,
    // 'no-restricted-exports': off,
    // 'no-restricted-globals': off,
    // 'no-restricted-imports': off,
    // 'no-restricted-properties': YESoff,
    // 'no-restricted-syntax': off,
    // 'no-return-assign': YESoff,
    // 'no-return-await': YESoff,
    // 'no-script-url': YESoff,
    // 'no-sequences': YESoff,
    // 'no-shadow': off,
    // 'no-shadow-restricted-names': error,
    // 'no-ternary': off,
    // 'no-throw-literal': YESoff,
    // 'no-undef-init': off,
    // 'no-undefined': off,
    // 'no-underscore-dangle': off,
    // 'no-unneeded-ternary': off,
    // 'no-unused-expressions': YESoff,
    // 'no-unused-labels': YESerror,
    // 'no-useless-call': YESoff,
    // 'no-useless-catch': YESerror,
    // 'no-useless-computed-key': off,
    // 'no-useless-concat': YESoff,
    // 'no-useless-constructor': off,
    // 'no-useless-escape': YESerror,
    // 'no-useless-rename': off,
    // 'no-useless-return': YESoff,
    // 'no-var': off,
    // 'no-void': YESoff,
    // 'no-warning-comments': YESoff,
    // 'no-with': YESerror,
    // 'object-shorthand': off,
    // 'one-var': off,
    // 'one-var-declaration-per-line': off,
    // 'operator-assignment': off,
    // 'prefer-arrow-callback': off,
    // 'prefer-const': off,
    // 'prefer-destructuring': off,
    // 'prefer-exponentiation-operator': off,
    // 'prefer-named-capture-group': YESoff,
    // 'prefer-numeric-literals': off,
    // 'prefer-object-has-own': YESoff,
    // 'prefer-object-spread': off,
    // 'prefer-promise-reject-errors': YESoff,
    // 'prefer-regex-literals': YESoff,
    // 'prefer-rest-params': off,
    // 'prefer-spread': off,
    // 'prefer-template': off,
    // 'quote-props': off,
    // 'radix': YESoff,
    // 'require-await': YESoff,
    // 'require-unicode-regexp': YESoff,
    // 'require-yield': error,
    // 'sort-imports': off,
    // 'sort-keys': off,
    // 'sort-vars': off,
    'spaced-comment': error,
    // 'strict': off,
    // 'symbol-description': off,
    // 'vars-on-top': YESoff,
    // 'yoda': YESoff,

    // Layout & Formatting
    // These rules care about how the code looks rather than how it executes:

    'array-bracket-newline': [
      error,
      'consistent',
    ],
    'array-bracket-spacing': error,
    'array-element-newline': [
      error,
      'consistent',
    ],
    'arrow-parens': error,
    'arrow-spacing': error,
    'block-spacing': error,
    'brace-style': error,
    'comma-dangle': [
      error,
      'always-multiline',
    ],
    'comma-spacing': error,
    'comma-style': error,
    'computed-property-spacing': error,
    'dot-location': error,
    // 'eol-last': off,
    // 'func-call-spacing': off,
    // 'function-call-argument-newline': off,
    // 'function-paren-newline': off,
    // 'generator-star-spacing': off,
    // 'implicit-arrow-linebreak': off,
    'indent': [
      error,
      2,
    ],
    'jsx-quotes': [
      error,
      'prefer-single',
    ],
    'key-spacing': error,
    // 'keyword-spacing': off,
    // 'line-comment-position': off,
    // 'linebreak-style': off,
    // 'lines-around-comment': off,
    // 'lines-between-class-members': off,
    'max-len': [
      error,
      {
        code: 100,
        ignoreComments: false,
        ignoreUrls: false,
        ignoreStrings: false,
        ignoreTemplateLiterals: false,
        ignoreRegExpLiterals: false,
      },
    ],
    // 'max-statements-per-line': off,
    // 'multiline-ternary': off,
    // 'new-parens': off,
    // 'newline-per-chained-call': off,
    'no-extra-parens': error,
    // 'no-mixed-spaces-and-tabs': error,
    'no-multi-spaces': YESerror,
    'no-multiple-empty-lines': [
      error,
      {
        max: 1,
        maxEOF: 0,
        maxBOF: 0,
      },
    ],
    'no-tabs': error,
    'no-trailing-spaces': error,
    // 'no-whitespace-before-property': off,
    // 'nonblock-statement-body-position': off,
    // 'object-curly-newline': off,
    'object-curly-spacing': [
      error,
      'always',
    ],
    // 'object-property-newline': off,
    // 'operator-linebreak': off,
    // 'padded-blocks': off,
    // 'padding-line-between-statements': off,
    // 'quotes': off,
    // 'rest-spread-spacing': off,
    'semi': error,
    // 'semi-spacing': off,
    // 'semi-style': off,
    // 'space-before-blocks': off,
    // 'space-before-function-paren': off,
    // 'space-in-parens': off,
    // 'space-infix-ops': off,
    // 'space-unary-ops': off,
    // 'switch-colon-spacing': off,
    // 'template-curly-spacing': off,
    // 'template-tag-spacing': off,
    // 'unicode-bom': off,
    // 'wrap-iife': YESoff,
    // 'wrap-regex': off,
    // 'yield-star-spacing': off,
  },
});

const { rules: configurationRules } = configuration;

/** @type { import('./types').Rules } */
const rules = configurationRules ?? {};

module.exports = { rules };
